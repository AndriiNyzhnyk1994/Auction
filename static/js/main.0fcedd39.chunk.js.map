{"version":3,"sources":["reportWebVitals.ts","auction-reducer.ts","AddItemForm.tsx","Lot.tsx","AppWithRedux.tsx","timer-reducer.ts","store.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","changeScoreValueAC","id","value","type","AddItemForm","props","useState","title","setTitle","error","setError","className","TextField","color","helperText","placeholder","onChange","e","currentTarget","Button","size","variant","onClick","newLotTitle","trim","addItem","Lot","dispatch","useDispatch","score","IconButton","decreaseScore","Number","changeScoreValue","increaseScore","removeLot","Delete","AppWithRedux","lots","useSelector","state","timer","minutes","Math","floor","map","l","startTimer","setTimeout","rootReducer","combineReducers","action","filter","sort","a","b","stateCopy","newLot","v1","lot","find","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fcedd39.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v1 } from \"uuid\"\r\n\r\nexport type LotType = {\r\n    id: string\r\n    title: string\r\n    score: number\r\n    changeScoreValue: number\r\n}\r\nexport type RemoveLotActionType = {\r\n    type: 'REMOVE-LOT'\r\n    id: string\r\n}\r\nexport type AddLotActionType = {\r\n    type: 'ADD-LOT'\r\n    title: string\r\n}\r\nexport type IncreaseScoreActionType = {\r\n    type: 'INCREASE-SCORE'\r\n    id: string\r\n}\r\nexport type DecreaseScoreActionType = {\r\n    type: 'DECREASE-SCORE'\r\n    id: string\r\n}\r\nexport type ChangeScoreValueActionType = {\r\n    type: 'CHANGE-SCORE-VALUE'\r\n    id: string\r\n    value: number\r\n}\r\n\r\nexport type AuctionReducerActionType =\r\n    RemoveLotActionType |\r\n    AddLotActionType |\r\n    IncreaseScoreActionType |\r\n    ChangeScoreValueActionType |\r\n    DecreaseScoreActionType\r\n\r\n\r\n\r\n\r\nlet initialState: Array<LotType> = []\r\n\r\n\r\nexport const auctionReducer = (state: Array<LotType> = initialState, action: AuctionReducerActionType) => {\r\n    switch (action.type) {\r\n        case 'REMOVE-LOT': {\r\n            return state.filter(l => l.id !== action.id).sort((a, b) =>  a.score < b.score ? 1 : -1)\r\n        }\r\n        case 'ADD-LOT': {\r\n            const stateCopy = [...state]\r\n            const newLot: LotType = {id: v1(), title: action.title, score: 0, changeScoreValue: 0}\r\n            return [newLot, ...stateCopy].sort((a, b) =>  a.score < b.score ? 1 : -1)\r\n        }\r\n        case 'INCREASE-SCORE': {\r\n            const stateCopy = [...state]\r\n            const lot = stateCopy.find(l => l.id === action.id)\r\n                if(lot) {\r\n                    lot.score = lot.score + lot.changeScoreValue\r\n                }\r\n            return stateCopy.sort((a, b) =>  a.score < b.score ? 1 : -1)\r\n        }\r\n        case 'DECREASE-SCORE': {\r\n            const stateCopy = [...state]\r\n            const lot = stateCopy.find(l => l.id === action.id)\r\n            if(lot) {\r\n                lot.score = lot.score - lot.changeScoreValue\r\n            }\r\n            return stateCopy.sort((a, b) =>  a.score < b.score ? 1 : -1)\r\n        }\r\n        case 'CHANGE-SCORE-VALUE': {\r\n            const stateCopy = [...state]\r\n            const lot = stateCopy.find(l => l.id === action.id)\r\n            if(lot) {\r\n                lot.changeScoreValue = action.value\r\n            }\r\n            return stateCopy\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const removeLotAC = (id: string): RemoveLotActionType => {\r\n    return {type: 'REMOVE-LOT', id}\r\n}\r\nexport const addLotAC = (title: string): AddLotActionType => {\r\n    return {type: 'ADD-LOT', title}\r\n}\r\nexport const increaseScoreAC = (id: string): IncreaseScoreActionType => {\r\n    return {type: 'INCREASE-SCORE', id}\r\n}\r\nexport const decreaseScoreAC = (id: string): DecreaseScoreActionType => {\r\n    return {type: 'DECREASE-SCORE', id}\r\n}\r\nexport const changeScoreValueAC = (id: string, value: number): ChangeScoreValueActionType => {\r\n    return {type: 'CHANGE-SCORE-VALUE', id, value}\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport './App.css';\r\n\r\nexport type AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n}\r\n\r\n\r\n\r\nfunction AddItemForm(props: AddItemFormPropsType) {\r\n    let [title, setTitle] = useState<string>('')\r\n    let [error, setError] = useState<null | string>(null)\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n        if (error) {\r\n            setError(null)\r\n        }\r\n    }\r\n\r\n\r\n    const addLot = (newLotTitle: string) => {\r\n        if (title.trim()) {\r\n            props.addItem(newLotTitle)\r\n            setTitle('')\r\n        } else {\r\n            setError('Please enter valid title')\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className={'add-item-form'}>\r\n            <TextField\r\n                color={\"secondary\"}\r\n                helperText={error}\r\n                placeholder={'Write name of a lot here'}\r\n                error={!!error} value={title}\r\n                onChange={onChangeHandler}\r\n            />\r\n            <Button size={\"small\"} variant={\"contained\"} onClick={() => {\r\n                addLot(title)\r\n            }}>+\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddItemForm;","import React from \"react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {changeScoreValueAC} from \"./auction-reducer\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport type LotPropsType = {\r\n    id: string\r\n    title: string\r\n    score: number\r\n    changeScoreValue: number\r\n    decreaseScore: () => void\r\n    increaseScore: () => void\r\n    removeLot: () => void\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction Lot(props: LotPropsType) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    return(\r\n        <div className={'lot-item'}>\r\n            <span className={'lot-title'}>{props.title}</span>\r\n            <span className={'lot-score'}>{props.score}</span>\r\n            <div className={'change-score-form'}>\r\n                <IconButton onClick={props.decreaseScore} size={\"small\"} className={'decrease-score-button'}>-</IconButton>\r\n                <input\r\n                    onChange={(e) => {\r\n                        dispatch(changeScoreValueAC(props.id, Number(e.currentTarget.value)))\r\n                    }\r\n                    }\r\n                    value={props.changeScoreValue}\r\n                    className={'change-score-input'}/>\r\n                <IconButton onClick={props.increaseScore} size={\"small\"} className={'increase-score-button'}>+</IconButton>\r\n            </div>\r\n\r\n            <IconButton size={\"small\"} className={'remove-lot-button'} onClick={props.removeLot}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lot","import React from 'react';\nimport './App.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootStateType} from \"./store\";\nimport {addLotAC, changeScoreValueAC, decreaseScoreAC, increaseScoreAC, LotType, removeLotAC} from \"./auction-reducer\";\nimport {addOneMinuteAC, addThirtySecondsAC, addTwoMinutesAC, startTimerAC} from \"./timer-reducer\";\nimport AddItemForm from \"./AddItemForm\";\nimport Lot from \"./Lot\";\nimport {Button} from \"@material-ui/core\";\n\nfunction AppWithRedux() {\n\n\n    let lots = useSelector<RootStateType, Array<LotType>>(state => state.lots)\n    let timer = useSelector<RootStateType, number>(state => state.timer)\n    const dispatch = useDispatch()\n\n    const addLot = (newLotTitle: string) => {\n        dispatch(addLotAC(newLotTitle))\n    }\n\n    //timer functions start\n    const startTimer = () => {\n        const action = startTimerAC()\n        dispatch(action)\n        if (timer > 0) {\n            setTimeout(startTimer, 1000)\n        }\n    }\n    const addThirtySeconds = () => {\n        dispatch(addThirtySecondsAC())\n    }\n    const addOneMinute = () => {\n        dispatch(addOneMinuteAC())\n    }\n    const addTwoMinutes = () => {\n        dispatch(addTwoMinutesAC())\n    }\n\n    //timer function end\n\n    let minutes = Math.floor(timer / (60));\n    timer -= minutes * (60);\n\n    return (\n        <div className=\"App\">\n            <div className={'header'}>\n                <h1>auction</h1>\n            </div>\n\n            <div className={'lots-list'}>\n                <AddItemForm addItem={addLot}/>\n                {lots.map(l => {\n                    const removeLot = () => {\n                        dispatch(removeLotAC(l.id))\n                    }\n                    const increaseScore = () => {\n                        dispatch(increaseScoreAC(l.id))\n                        dispatch(changeScoreValueAC(l.id, 0))\n                    }\n                    const decreaseScore = () => {\n                        dispatch(decreaseScoreAC(l.id))\n                        dispatch(changeScoreValueAC(l.id, 0))\n                    }\n\n                    return (\n                        <Lot\n                            key={l.id}\n                            id={l.id}\n                            title={l.title}\n                            score={l.score}\n                            removeLot={removeLot}\n                            changeScoreValue={l.changeScoreValue}\n                            decreaseScore={decreaseScore}\n                            increaseScore={increaseScore}\n                        />\n                    )\n                })}\n            </div>\n            <div className={'timer'}>\n                <h2>Timer</h2>\n                <div><h2>{`${minutes < 10 ? '0' : ''}${minutes} : ${timer < 10 ? '0' : ''}${timer}`}</h2></div>\n                <div>\n                    <Button variant={\"contained\"} onClick={startTimer}>start</Button>\n                </div>\n                <Button size={\"small\"} variant={\"contained\"} onClick={addThirtySeconds}>+ 30 sec</Button>\n                <Button size={\"small\"} variant={\"contained\"} onClick={addOneMinute}>+ 1 min</Button>\n                <Button size={\"small\"} variant={\"contained\"} onClick={addTwoMinutes}>+ 2 min</Button>\n\n            </div>\n        </div>\n    );\n}\n\nexport default AppWithRedux;\n","\r\nexport type StartTimerActionType = {\r\n    type: 'START-TIMER'\r\n}\r\n\r\nexport type AddThirtySecondsActionType = {\r\n    type: 'ADD-THIRTY-SECONDS'\r\n}\r\nexport type AddOneMinuteActionType = {\r\n    type: 'ADD-ONE-MINUTE'\r\n}\r\nexport type AddTwoMinutesActionType = {\r\n    type: 'ADD-TWO-MINUTES'\r\n}\r\nexport type TimerActionType =\r\n    StartTimerActionType |\r\n    AddOneMinuteActionType |\r\n    AddThirtySecondsActionType |\r\n    AddTwoMinutesActionType\r\n\r\n\r\nconst initialState =  10\r\n\r\n\r\n\r\n\r\n\r\nexport const timerReducer = (state: number = initialState, action: TimerActionType) => {\r\n    switch (action.type) {\r\n        case 'START-TIMER': {\r\n            if(state > 0) {\r\n                return state - 1\r\n            }\r\n            return state\r\n        }\r\n        case 'ADD-ONE-MINUTE': {\r\n            return state + 60\r\n        }\r\n        case 'ADD-TWO-MINUTES': {\r\n            return state + 120\r\n        }\r\n        case 'ADD-THIRTY-SECONDS': {\r\n            return state + 30\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\n\r\nexport const startTimerAC = (): StartTimerActionType => {\r\n    return {type: 'START-TIMER'}\r\n}\r\nexport const addOneMinuteAC = (): AddOneMinuteActionType => {\r\n    return {type: 'ADD-ONE-MINUTE'}\r\n}\r\nexport const addTwoMinutesAC = (): AddTwoMinutesActionType => {\r\n    return {type: 'ADD-TWO-MINUTES'}\r\n}\r\nexport const addThirtySecondsAC = (): AddThirtySecondsActionType => {\r\n    return {type: 'ADD-THIRTY-SECONDS'}\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {auctionReducer} from \"./auction-reducer\";\r\nimport {timerReducer} from \"./timer-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    lots: auctionReducer,\r\n    timer: timerReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer)\r\n\r\nexport type RootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport AppWithRedux from \"./AppWithRedux\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppWithRedux/>\n    </Provider>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}